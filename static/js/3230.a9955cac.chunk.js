"use strict";(self.webpackChunkcomputing=self.webpackChunkcomputing||[]).push([[3230],{3230:function(n,e,i){i.r(e),i.d(e,{default:function(){return a}});var s=i(2791),t=i(8329),r=i(184),d=(0,s.lazy)((function(){return i.e(6370).then(i.bind(i,6370))})),l=(0,s.lazy)((function(){return i.e(3779).then(i.bind(i,3779))})),o=(0,s.lazy)((function(){return Promise.all([i.e(7160),i.e(6884)]).then(i.bind(i,3397))}));function a(){(0,t.Z)("js Operators");return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{id:"container",children:[(0,r.jsx)("div",{id:"left",children:(0,r.jsx)(d,{})}),(0,r.jsxs)("div",{id:"middle",children:[(0,r.jsx)("h1",{children:"JavaScript Operators"}),(0,r.jsx)("p",{children:"JavaScript has the following types of operators. This section describes the operators and contains information about operator precedence."}),(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Assignment operators"}),(0,r.jsx)("li",{children:"Comparison operators"}),(0,r.jsx)("li",{children:"Arithmetic operators"}),(0,r.jsx)("li",{children:"Bitwise operators"}),(0,r.jsx)("li",{children:"Logical operators"}),(0,r.jsx)("li",{children:"String operators"}),(0,r.jsx)("li",{children:"Conditional (ternary) operator"}),(0,r.jsx)("li",{children:"Comma operator"}),(0,r.jsx)("li",{children:"Unary operators"}),(0,r.jsx)("li",{children:"Relational operators"})]}),(0,r.jsx)("h2",{children:"Assignment Operators"}),(0,r.jsx)("p",{children:"Assignment operators assign values to JavaScript variables."}),(0,r.jsxs)("table",{className:"table",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Operator"}),(0,r.jsx)("th",{children:"Description"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"="}),(0,r.jsx)("td",{children:"x = y"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"+="}),(0,r.jsx)("td",{children:"x += y"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"-="}),(0,r.jsx)("td",{children:"x -= y"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"*="}),(0,r.jsx)("td",{children:"x *= y"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"/="}),(0,r.jsx)("td",{children:"x /= y"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"%="}),(0,r.jsx)("td",{children:"x %= y"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"**="}),(0,r.jsx)("td",{children:"x **= y"})]})]})]}),(0,r.jsx)(o,{props:'<!DOCTYPE html>\n<html>\n<body>\n    <div id="Assignment_Operators_equal"></div>\n    <div id="Assignment_Operators_addition_assignment"></div>\n    <div id="Assignment_Operators_subtraction_assignment"></div>\n    <div id="Assignment_Operators_multiplication_assignment"></div>\n    <div id="Assignment_Operators_division_assignment"></div>\n    <div id="Assignment_Operators_remainder_assignment"></div>\n    <div id="Assignment_Operators_exponentiation_assignment"></div>\n    <script>\n        let x = 10;\n        let y = 20;\n        x = y;\n        document.getElementById("Assignment_Operators_equal").innerHTML = "x = " + x + ", y = " + y;\n        x += y;\n        document.getElementById("Assignment_Operators_addition_assignment").innerHTML = "x = " + x + ", y = " + y;\n        x -= y;\n        document.getElementById("Assignment_Operators_subtraction_assignment").innerHTML = "x = " + x + ", y = " + y;\n        x *= y;\n        document.getElementById("Assignment_Operators_multiplication_assignment").innerHTML = "x = " + x + ", y = " + y;\n        x /= y;\n        document.getElementById("Assignment_Operators_division_assignment").innerHTML = "x = " + x + ", y = " + y;\n        x %= y;\n        document.getElementById("Assignment_Operators_remainder_assignment").innerHTML = "x = " + x + ", y = " + y;\n        x **= y;\n        document.getElementById("Assignment_Operators_exponentiation_assignment").innerHTML = "x = " + x + ", y = " + y;\n    <\/script>\n</body>\n</html>'})]}),(0,r.jsx)("div",{id:"right",children:(0,r.jsx)(l,{})})]})})}}}]);
//# sourceMappingURL=3230.a9955cac.chunk.js.map