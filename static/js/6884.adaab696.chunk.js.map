{"version":3,"file":"static/js/6884.adaab696.chunk.js","mappings":"8JAgFA,UA1EA,YAAqC,IAAVA,EAAS,EAATA,MACzB,GAAwBC,EAAAA,EAAAA,UAASD,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BC,EAAAA,EAAAA,iBAAnBC,GAAT,eACA,GAA4BN,EAAAA,EAAAA,UAAS,OAArC,eAAOO,EAAP,KAAeC,EAAf,KACMC,GAAMC,EAAAA,EAAAA,UAkBZ,OAhBAC,EAAAA,EAAAA,YAAU,WACRT,EAAQH,EACT,GAAE,CAACA,KAEJY,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUH,EAAII,QACpBL,EAAUI,EAAQE,cAAcC,SAASC,KAAKC,aAAe,MAC7DC,QAAQC,IAAIP,EAAQE,cAAcC,SAASC,KAAKC,cAChDX,GAAgB,WACdF,EAAUH,EACX,GACF,GAAE,CAACA,EAAMM,KAMR,+BACE,iBAAKa,UAAU,OAAf,WACE,0BAeE,gBAAK,kBAAgB,QAArB,UACE,SAAC,IAAD,CACEC,MAAOpB,EACPqB,SAAS,OACTC,YAAY,mCACZC,SAAU,SAACC,GAAD,OAASvB,EAAQuB,EAAIC,OAAOL,MAA5B,EACVM,QAAS,GACTP,UAAU,aACVQ,YAAY,SASlB,gBAAKR,UAAU,eAAf,UACE,mBACEX,IAAKA,EACLN,OAAQA,EACR0B,MAAM,SAENC,YAAY,IACZvB,OAAQA,EACRa,UAAU,6BAMrB,C","sources":["Editor/HtmlCssJsEditor.js"],"sourcesContent":["import React, { useState, useEffect, useTransition, useRef } from \"react\";\n// import CodeMirror from \"@uiw/react-codemirror\";\n// import { markdown, markdownLanguage } from \"@codemirror/lang-markdown\";\n// import { languages } from \"@codemirror/language-data\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\n\nfunction HtmlCssJsEditor({ props }) {\n  const [html, setHtml] = useState(props);\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [, startTransition] = useTransition();\n  const [height, setHeight] = useState(\"0px\");\n  const ref = useRef();\n\n  useEffect(() => {\n    setHtml(props);\n  }, [props]);\n\n  useEffect(() => {\n    const element = ref.current;\n    setHeight(element.contentWindow.document.body.scrollHeight + \"px\");\n    console.log(element.contentWindow.document.body.scrollHeight);\n    startTransition(() => {\n      setSrcDoc(html);\n    });\n  }, [html, height]);\n  // const onLoad = () => {\n  //   setHeight(ref.contentWindow.document.body.scrollHeight + \"px\");\n  // };\n\n  return (\n    <>\n      <div className=\"pane\">\n        <div>\n          {/* <CodeMirror\n            value={html}\n            spellCheck=\"false\"\n            aria-label=\"HTML Code Editor\"\n            padding={15}\n            options={{\n              spellCheck: \"false\",\n              lineWrapping: true,\n            }}\n            extensions={[\n              markdown({ base: markdownLanguage, codeLanguages: languages }),\n            ]}\n            onChange={(value) => setHtml(value)}\n          /> */}\n          <div data-color-mode=\"light\">\n            <CodeEditor\n              value={html}\n              language=\"html\"\n              placeholder=\"Please enter html, css, js code.\"\n              onChange={(evn) => setHtml(evn.target.value)}\n              padding={15}\n              className=\"EditorMode\"\n              spellCheck={false}\n              // style={{\n              //   fontFamily:\n              //     \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n              //   fontSize: 14,\n              // }}\n            />\n          </div>\n        </div>\n        <div className=\"EditorOutput\">\n          <iframe\n            ref={ref}\n            srcDoc={srcDoc}\n            title=\"output\"\n            // sandbox=\"allow-scripts\"\n            frameBorder=\"0\"\n            height={height}\n            className=\"text-editor-output\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default HtmlCssJsEditor;\n"],"names":["props","useState","html","setHtml","srcDoc","setSrcDoc","useTransition","startTransition","height","setHeight","ref","useRef","useEffect","element","current","contentWindow","document","body","scrollHeight","console","log","className","value","language","placeholder","onChange","evn","target","padding","spellCheck","title","frameBorder"],"sourceRoot":""}