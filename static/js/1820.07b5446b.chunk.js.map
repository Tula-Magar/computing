{"version":3,"file":"static/js/1820.07b5446b.chunk.js","mappings":"0LAEMA,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,kCACrBC,GAAkBD,EAAAA,EAAAA,OAAK,kBAC3B,kCAGIE,GAAkBF,EAAAA,EAAAA,OAAK,kBAAM,2DACpB,SAASG,KACtBC,EAAAA,EAAAA,GAAS,qBAWT,OACE,+BACE,iBAAKC,GAAG,YAAR,WACE,gBAAKA,GAAG,OAAR,UACE,SAACN,EAAD,OAGF,iBAAKM,GAAG,SAAR,WACE,uDACA,sNAMA,0DACA,yBACG,IADH,6HAKA,SAACH,EAAD,CAAiBI,MA9BQ,4IAgCzB,0DACA,mNAKA,SAACJ,EAAD,CACEI,MAAK,kEAOT,gBAAKD,GAAG,QAAR,UACE,SAACJ,EAAD","sources":["programming_languages/javascript_l/js_array_method.js"],"sourcesContent":["import React, { lazy } from \"react\";\nimport UseTitle from \"../../Title.js\";\nconst LeftNav = lazy(() => import(\"../../LeftNav/leftNav.js\"));\nconst RelatedCssLinks = lazy(() =>\n  import(\"./js_related_links/js_courses_links.js\")\n);\n//https://www.freecodecamp.org/news/manipulating-arrays-in-javascript/\nconst HtmlCssJsEditor = lazy(() => import(\"../../Editor/HtmlCssJsEditor.js\"));\nexport default function JsArrowFunction() {\n  UseTitle(\"Js Arrow Function\");\n\n  const TraditionalAndArrowFunction = ` //Traditional Function\n  function add() {\n     return 5 + 5;\n}\n    //Arrow Function\n  const add = () => {\n     return 5 + 5;\n}`;\n\n  return (\n    <>\n      <div id=\"container\">\n        <div id=\"left\">\n          <LeftNav />\n        </div>\n\n        <div id=\"middle\">\n          <h1>Javascript Arrow Function</h1>\n          <p>\n            Arrow functions are a new feature in ES6. They are a concise way to\n            define functions. They are a little bit different from regular\n            functions in that they do not have a function keyword.\n          </p>\n\n          <h1>Trdational vs Arrow Function</h1>\n          <p>\n            {\" \"}\n            Arrow function needs a variable to be defined in order to use it.\n            See below for an example and observe the difference.\n          </p>\n          <HtmlCssJsEditor props={TraditionalAndArrowFunction} />\n\n          <h1>Parameters in Arrow Function</h1>\n          <p>\n            Paramenters is a list of variables that are used to define the\n            function. The parameters are separated by commas. The parameters is\n            useful when you want to reuse the data. For example\n          </p>\n          <HtmlCssJsEditor\n            props={`const add = (a, b) => {\n    return a + b;\n}\nadd(5, 5);`}\n          />\n        </div>\n\n        <div id=\"right\">\n          <RelatedCssLinks />\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["LeftNav","lazy","RelatedCssLinks","HtmlCssJsEditor","JsArrowFunction","UseTitle","id","props"],"sourceRoot":""}