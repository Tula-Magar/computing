"use strict";(self.webpackChunkcomputing=self.webpackChunkcomputing||[]).push([[5333],{5333:function(e,a,r){r.r(a),r.d(a,{default:function(){return h}});var n=r(7313),l=r(865),i=r(6417),s=(0,n.lazy)((function(){return r.e(6447).then(r.bind(r,6447))})),t=(0,n.lazy)((function(){return r.e(5028).then(r.bind(r,5028))}));function h(){return(0,l.Z)("Js Array"),(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{id:"container",children:[(0,i.jsx)("div",{id:"left",children:(0,i.jsx)(s,{})}),(0,i.jsxs)("div",{id:"middle",children:[(0,i.jsx)("h1",{children:"Javascript Arrays"}),(0,i.jsx)("p",{children:"Arrays are a data structure that can hold multiple values in a single variable. Arrays are zero based, meaning the first index is 0 and the last index is the length of the array - 1. Arrays can be created with the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5];"})}),(0,i.jsx)("p",{children:"Arrays can be created with the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = new Array(value1, value2, value3, value4, value5);"})}),(0,i.jsx)("p",{children:"Arrays can be created with the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = new Array(5);"})}),(0,i.jsx)("p",{children:"Arrays can be created with the following syntax:"}),(0,i.jsx)("h1",{children:"How to access an element in an array"}),(0,i.jsx)("p",{children:"To access an element in an array, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray[0]; // value1 myArray[1]; // value2 myArray[2]; // value3 myArray[3]; // value4 myArray[4]; // value5"})}),(0,i.jsx)("h1",{children:" How to add an element to an array"}),(0,i.jsx)("p",{children:"To add an element to an array, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray[5] = value6;"})}),(0,i.jsx)("h1",{children:"How to remove an element from an array"}),(0,i.jsx)("p",{children:"To remove an element from an array, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.pop(); // removes the last element in the array myArray.shift(); // removes the first element in the array myArray.splice(index, 1); // removes the element at the specified index"})}),(0,i.jsx)("h1",{children:"How to replace an element in an array with another element"}),(0,i.jsx)("p",{children:"To replace an element in an array with another element, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray[index] = newValue;"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the indexOf"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the indexOf method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.indexOf(value); // returns the index of the value"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the includes"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the includes method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.includes(value); // returns true or false"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the find"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the find method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.find(value); // returns the value or undefined"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the findIndex"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the findIndex method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.findIndex(value); // returns the index of the value or -1"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the some"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the some method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.some(value); // returns true or false"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the every"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the every method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.every(value); // returns true or false"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the forEach"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the forEach method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.forEach(value); // returns undefined"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the map"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the map method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.map(value); // returns an array"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the filter"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the filter method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.filter(value); // returns an array"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the reduce"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the reduce method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.reduce(value); // returns a value"})}),(0,i.jsx)("h1",{children:"How to check if an element exists in an array using the reduceRight"}),(0,i.jsx)("p",{children:"To check if an element exists in an array using the reduceRight method, you can use the following syntax:"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:"var myArray = [value1, value2, value3, value4, value5]; myArray.reduceRight(value); // returns a value"})})]}),(0,i.jsx)("div",{id:"right",children:(0,i.jsx)(t,{})})]})})}}}]);