"use strict";(self.webpackChunkcomputing=self.webpackChunkcomputing||[]).push([[1122],{1122:function(e,o,i){i.r(o),i.d(o,{default:function(){return c}});var t=i(8381),s=i(9342),n=i(9343),r=(0,t.lazy)((function(){return i.e(4115).then(i.bind(i,4115))})),l=(0,t.lazy)((function(){return i.e(7657).then(i.bind(i,7657))})),a=(0,t.lazy)((function(){return Promise.all([i.e(1096),i.e(4384)]).then(i.bind(i,9471))}));function c(){(0,s.Z)("Js Loops");return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{id:"container",children:[(0,n.jsx)("div",{id:"left",children:(0,n.jsx)(r,{})}),(0,n.jsxs)("div",{id:"middle",children:[(0,n.jsx)("h1",{children:"JavaScript Loops"}),(0,n.jsx)("p",{children:"JavaScript has a looping construct called a loop. The loop construct is used to execute a block of code a number of times. The loop can go in a forward or backward direction."}),(0,n.jsx)("p",{children:"There are two types of loops: for and while. The for loop is used to iterate over a list of items. The while loop is used to execute a block of code as long as a condition is true. Other loops are made up of for and while loops such as do while, and for each and for in."}),(0,n.jsx)("h1",{children:"for loop"}),(0,n.jsxs)("p",{children:['The for loop is used to iterate over a list of items. The for loop is used to execute a block of code a number of times. The loop can go in a forward or backward direction. The for loop express as ( for (initialization; condition; final expression) "','" is the block of code to be executed.)']}),(0,n.jsx)(a,{props:' let word = "characters";\n  for (let i = 0; i < 10; i++) { //initialization - the variable i is set to 0 and the condition is checked every time the loop runs. If the condition is true, the loop continues. If the condition is false, the loop stops.\n    console.log(i); //the loop runs 10 times and prints c, h, a, r, a, c, t, e, r, s\n    } // i++ - the variable i is incremented by 1 every time the loop runs.'}),(0,n.jsx)("h1",{children:"while loop"}),(0,n.jsxs)("p",{children:['The while loop is used to execute a block of code as long as a condition is true. The while loop express as ( while (condition) "','" is the block of code to be executed.)']}),(0,n.jsx)(a,{props:"let i = 0;\nwhile (i < 10) { //initialization - the variable i is set to 0 and the condition is checked every time the loop runs. If the condition is true, the loop continues. If the condition is false, the loop stops.\n    console.log(i); // prints 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n    i++; //the variable i is incremented by 1 every time the loop runs.\n}"}),(0,n.jsx)("h1",{children:"do while loop"}),(0,n.jsxs)("p",{children:["The do while loop is used to execute a block of code at least once. The do while loop express as ( do "," while (condition) is the block of code to be executed.) The do while loop is similar to the while loop, except that the do while loop will execute at least once. The do while loop will execute the code inside the curly braces at least once, even if the condition is false the first time. The do while loop is useful when you want to execute the code inside the curly braces at least once, even if the condition is false the first time. The code goes to do block and condition check goes to the while block."]}),(0,n.jsx)(a,{props:"let i = 0;\ndo {\n    console.log(i); // prints 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n    i++; //the variable i is incremented by 1 every time the loop runs.\n} while (i < 10);//initialization - the variable i is set to 0 and the condition is checked every time the loop runs. If the condition is true, the loop continues. If the condition is false, the loop stops."}),(0,n.jsx)("h1",{children:"For Each Loop"}),(0,n.jsxs)("p",{children:['The for each loop is used to iterate over a list of items. The for each loop is used to execute a block of code a number of times. The loop can go in a forward or backward direction. The for each loop express as ( for (variable in list) "','" is the block of code to be executed.)']}),(0,n.jsx)("b",{children:"Note:"}),"The for each loop is not a replacement for the for loop. The for each loop is a special form of the for loop. The for loop is used to iterate over a list of items. The for each loop is used to execute a block of code a number of times. For each loop isn't suitable to loop in a word to get a character at a time. See the for loop example above.",(0,n.jsx)(a,{props:'const words = ["characters", "words", "loops", "arrays"];\nwords.forEach(word => {\n    console.log(word); // prints word at a time -> characters, words, loops, arrays\n}'}),(0,n.jsx)("h1",{children:"For in Loop"}),(0,n.jsxs)("p",{children:['The for in loop is used to iterate over the properties of an object. The for in helps to return the keys of an object and access the value of object using the key. The for in loop express as ( for (variable in list) "','" is the block of code to be executed.)']}),(0,n.jsx)("b",{children:"Note:"}),"The for in loop is not a replacement for the for loop. The for in loop isn't suitable to loop in a arrays or lists."]}),(0,n.jsx)("div",{id:"right",children:(0,n.jsx)(l,{})})]})})}}}]);
//# sourceMappingURL=1122.aede75b4.chunk.js.map