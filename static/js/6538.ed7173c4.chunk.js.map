{"version":3,"file":"static/js/6538.ed7173c4.chunk.js","mappings":"2LAEMA,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,kCACrBC,GAAkBD,EAAAA,EAAAA,OAAK,kBAC3B,kCAEIE,GAAkBF,EAAAA,EAAAA,OAAK,kBAAM,2DACpB,SAASG,KACtBC,EAAAA,EAAAA,GAAS,gBAgCT,OACE,+BACE,iBAAKC,GAAG,YAAR,WACE,gBAAKA,GAAG,OAAR,UACE,SAACN,EAAD,OAGF,iBAAKM,GAAG,SAAR,WACE,kDACA,qJAIA,kYAQA,wFAEA,4CACA,2NAKA,SAACH,EAAD,CAAiBI,MA3Dd,6IA4DH,0CACA,sRAMA,SAACJ,EAAD,CAAiBI,MA7Dd,4RA8DH,4CACA,qRAMA,SAACJ,EAAD,CAAiBI,MA3DZ,oSA6DL,2CACA,0FACA,SAACJ,EAAD,CAAiBI,MAtDV,0MAuDP,+RAQF,gBAAKD,GAAG,QAAR,UACE,SAACJ,EAAD","sources":["programming_languages/javascript_l/js_variables.js"],"sourcesContent":["import React, { lazy } from \"react\";\r\nimport UseTitle from \"../../Title.js\";\r\nconst LeftNav = lazy(() => import(\"../../LeftNav/leftNav.js\"));\r\nconst RelatedCssLinks = lazy(() =>\r\n  import(\"./js_related_links/js_courses_links.js\")\r\n);\r\nconst HtmlCssJsEditor = lazy(() => import(\"../../Editor/HtmlCssJsEditor.js\"));\r\nexport default function JsVariables() {\r\n  UseTitle(\"Js Variables\");\r\n\r\n  const JsVar = `function sayHi() { \r\n    var name = \"John is \" \r\n    var age = \"30\"\r\n}\r\nconsole.log(name + age) // can be accessed outside the function`;\r\n\r\n  const JsLet = `function sayHi() {\r\n    let name = \"John\"\r\n    console.log(name) // can be accessed within the function or block \r\n\r\n    name = \"5\" // can be changed or reassigned\r\n    console.log(name) \r\n\r\n}\r\nconsole.log(name) // cann't be accessed outside the function. You will get an error`;\r\n\r\n  const JsConst = `function sayHi() {\r\n    const name = \"John\"\r\n    console.log(name) // can be accessed within the function or block\r\n    \r\n    name = \"5\" // cann't be changed or reassigned, you will get an error\r\n\r\n}\r\nconsole.log(name) // cann't be accessed outside the function. You will get an error`;\r\n\r\n  const JsNothing = `function sayHi( name, age, negative ) {\r\n    console.log(name , age - negative) // can be accessed within the function or block\r\n}\r\nsayHi(\"John\", \"30\", 2 ); // can be accessed outside the function`;\r\n\r\n  return (\r\n    <>\r\n      <div id=\"container\">\r\n        <div id=\"left\">\r\n          <LeftNav />\r\n        </div>\r\n\r\n        <div id=\"middle\">\r\n          <h1>JavaScript Variables</h1>\r\n          <p>\r\n            JavaScript variables are containers for storing data. You must\r\n            declare a variable before you can use it for any purpose.\r\n          </p>\r\n          <p>\r\n            JavaScript is a weak typed language. It does not have a type system\r\n            meaning that you don't have to specify the type of a variable.\r\n            JavaScript will automatically assign the type of a variable based on\r\n            the value that it is assigned. Unlike other languages like Java, C,\r\n            C++, etc, you have to specify the type of a variable such as int,\r\n            string, float, and etc.\r\n          </p>\r\n          <p>Following below is an examples of a variable in JavaScript.</p>\r\n\r\n          <h1> Var variable </h1>\r\n          <p>\r\n            The var keyword is used to declare a variable. The var keyword is a\r\n            global variable. It can be used anywhere in the program. The var is\r\n            a old variable keyword in JavaScript and still in use.\r\n          </p>\r\n          <HtmlCssJsEditor props={JsVar} />\r\n          <h1>Let variable</h1>\r\n          <p>\r\n            Since 2015, the let keyword was introduced in JavaScript. The let\r\n            keyword is a local variable. It can be used only within the block it\r\n            was defined. You must use the let variable when there is a chance\r\n            that the variable will be reassigned or changed.\r\n          </p>\r\n          <HtmlCssJsEditor props={JsLet} />\r\n          <h1>Const variable</h1>\r\n          <p>\r\n            Since 2015, the const keyword was introduced in JavaScript. The\r\n            const keyword is a constant variable. It can be used only within the\r\n            block it was defined. It can't be reassigned and changed. The const\r\n            variable is very strict but easy to understand.\r\n          </p>\r\n          <HtmlCssJsEditor props={JsConst} />\r\n\r\n          <h1>Using Nothing</h1>\r\n          <p> I am using nothing type variable in the function parameters.</p>\r\n          <HtmlCssJsEditor props={JsNothing} />\r\n          <p>\r\n            The reason I am using nothing type variable is because I am not sure\r\n            if the variable will be reassigned or changed. I didn't give the\r\n            variable a type and JavaScript will assign the type of the variable\r\n            based on the value that it is assigned automatically.\r\n          </p>\r\n        </div>\r\n\r\n        <div id=\"right\">\r\n          <RelatedCssLinks />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["LeftNav","lazy","RelatedCssLinks","HtmlCssJsEditor","JsVariables","UseTitle","id","props"],"sourceRoot":""}